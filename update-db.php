<?php
class ExploitDBUpdater {
    private $db;

    public function __construct($db_file) {
        $this->db = new SQLite3($db_file);
    }

    // Function to update the database with exploit data from a given directory
    public function update($exploitdb_dir) {
        echo "Updating the Exploit-DB from directory: $exploitdb_dir...\n";

        // Loop through the exploit files in the directory
        foreach (glob($exploitdb_dir . '/*.json') as $exploit_file) {
            $exploit_data = json_decode(file_get_contents($exploit_file), true);

            if ($exploit_data) {
                // Insert data into the exploits table
                $stmt = $this->db->prepare("
                    INSERT OR IGNORE INTO exploits 
                    (cve_id, title, description, date_published, platform, type, url) 
                    VALUES (:cve_id, :title, :description, :date_published, :platform, :type, :url)"
                );

                $stmt->bindValue(':cve_id', $exploit_data['cve_id'], SQLITE3_TEXT);
                $stmt->bindValue(':title', $exploit_data['title'], SQLITE3_TEXT);
                $stmt->bindValue(':description', $exploit_data['description'], SQLITE3_TEXT);
                $stmt->bindValue(':date_published', $exploit_data['date_published'], SQLITE3_TEXT);
                $stmt->bindValue(':platform', $exploit_data['platform'], SQLITE3_TEXT);
                $stmt->bindValue(':type', $exploit_data['type'], SQLITE3_TEXT);
                $stmt->bindValue(':url', $exploit_data['url'], SQLITE3_TEXT);
                
                $stmt->execute();
                echo "Inserted/Updated: " . $exploit_data['title'] . "\n";
            } else {
                echo "Failed to parse: $exploit_file\n";
            }
        }
    }
}

// Check if correct number of arguments are provided
if ($argc != 2) {
    echo "Usage: php update-db.php <exploitdb_dir>\n";
    exit(1);
}

$db_file = './exploitdb/exploitdb.db';
$exploitdb_dir = $argv[1];

if (!file_exists($db_file)) {
    echo "Error: Database file not found at $db_file.\n";
    exit(1);
}

if (!is_dir($exploitdb_dir)) {
    echo "Error: Exploit directory $exploitdb_dir not found.\n";
    exit(1);
}

// Create ExploitDBUpdater instance and update the database
$updater = new ExploitDBUpdater($db_file);
$updater->update($exploitdb_dir);

echo "Exploit database update complete.\n";
?>