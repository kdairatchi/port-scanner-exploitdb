<?php
class ExploitDBUpdater {
    private $db;
    
    public function __construct($db_file) {
        $this->db = new SQLite3($db_file);
    }
    
    public function update($exploitdb_dir) {
        echo "Updating the Exploit-DB...\n";
        
        foreach (glob($exploitdb_dir . '/*.json') as $file) {
            $exploit_data = json_decode(file_get_contents($file), true);
            
            if (isset($exploit_data['cve_id'])) {
                $stmt = $this->db->prepare("INSERT INTO exploits (cve_id, title, description, date_published, platform, type, url) 
                                            VALUES (:cve_id, :title, :description, :date_published, :platform, :type, :url)
                                            ON CONFLICT(cve_id) DO UPDATE SET 
                                                title = :title, description = :description, date_published = :date_published, platform = :platform, type = :type, url = :url");
                $stmt->bindValue(':cve_id', $exploit_data['cve_id'], SQLITE3_TEXT);
                $stmt->bindValue(':title', $exploit_data['title'], SQLITE3_TEXT);
                $stmt->bindValue(':description', $exploit_data['description'], SQLITE3_TEXT);
                $stmt->bindValue(':date_published', $exploit_data['date_published'], SQLITE3_TEXT);
                $stmt->bindValue(':platform', $exploit_data['platform'], SQLITE3_TEXT);
                $stmt->bindValue(':type', $exploit_data['type'], SQLITE3_TEXT);
                $stmt->bindValue(':url', $exploit_data['url'], SQLITE3_TEXT);
                $stmt->execute();
                
                echo "Inserted/Updated exploit: " . $exploit_data['title'] . "\n";
            }
        }
    }
}

if ($argc != 2) {
    echo "Usage: php update-db.php <exploitdb_dir>\n";
    exit(1